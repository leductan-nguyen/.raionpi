V$(function() {\u000a    function ConnectionViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.settings = parameters[1];\u000a        self.printerProfiles = parameters[2];\u000a\u000a        self.printerProfiles.profiles.items.subscribe(function() {\u000a            var allProfiles = self.printerProfiles.profiles.items();\u000a\u000a            var printerOptions = [];\u000a            _.each(allProfiles, function(profile) {\u000a                printerOptions.push({id: profile.id, name: profile.name});\u000a            });\u000a            self.printerOptions(printerOptions);\u000a        });\u000a\u000a        self.printerProfiles.currentProfile.subscribe(function() {\u000a            self.selectedPrinter(self.printerProfiles.currentProfile());\u000a        });\u000a\u000a        self.portOptions = ko.observableArray(undefined);\u000a        self.baudrateOptions = ko.observableArray(undefined);\u000a        self.printerOptions = ko.observableArray(undefined);\u000a        self.selectedPort = ko.observable(undefined);\u000a        self.selectedBaudrate = ko.observable(undefined);\u000a        self.selectedPrinter = ko.observable(undefined);\u000a        self.saveSettings = ko.observable(undefined);\u000a        self.autoconnect = ko.observable(undefined);\u000a\u000a        self.isErrorOrClosed = ko.observable(undefined);\u000a        self.isOperational = ko.observable(undefined);\u000a        self.isPrinting = ko.observable(undefined);\u000a        self.isPaused = ko.observable(undefined);\u000a        self.isError = ko.observable(undefined);\u000a        self.isReady = ko.observable(undefined);\u000a        self.isLoading = ko.observable(undefined);\u000a\u000a        self.buttonText = ko.pureComputed(function() {\u000a            if (self.isErrorOrClosed())\u000a                return gettext("Connect");\u000a            else\u000a                return gettext("Disconnect");\u000a        });\u000a\u000a        self.previousIsOperational = undefined;\u000a\u000a        self.requestData = function() {\u000a            $.ajax({\u000a                url: API_BASEURL + "connection",\u000a                method: "GET",\u000a                dataType: "json",\u000a                success: function(response) {\u000a                    self.fromResponse(response);\u000a                }\u000a            })\u000a        };\u000a\u000a        self.fromResponse = function(response) {\u000a            var ports = response.options.ports;\u000a            var baudrates = response.options.baudrates;\u000a            var portPreference = response.options.portPreference;\u000a            var baudratePreference = response.options.baudratePreference;\u000a            var printerPreference = response.options.printerProfilePreference;\u000a            var printerProfiles = response.options.printerProfiles;\u000a\u000a            self.portOptions(ports);\u000a            self.baudrateOptions(baudrates);\u000a\u000a            if (!self.selectedPort() && ports && ports.indexOf(portPreference) >= 0)\u000a                self.selectedPort(portPreference);\u000a            if (!self.selectedBaudrate() && baudrates && baudrates.indexOf(baudratePreference) >= 0)\u000a                self.selectedBaudrate(baudratePreference);\u000a            if (!self.selectedPrinter() && printerProfiles && printerProfiles.indexOf(printerPreference) >= 0)\u000a                self.selectedPrinter(printerPreference);\u000a\u000a            self.saveSettings(false);\u000a        };\u000a\u000a        self.fromHistoryData = function(data) {\u000a            self._processStateData(data.state);\u000a        };\u000a\u000a        self.fromCurrentData = function(data) {\u000a            self._processStateData(data.state);\u000a        };\u000a\u000a        self.openOrCloseOnStateChange = function() {\u000a            var connectionTab = $("#connection");\u000a            if (self.isOperational() && connectionTab.hasClass("in")) {\u000a                connectionTab.collapse("hide");\u000a            } else if (!self.isOperational() && !connectionTab.hasClass("in")) {\u000a                connectionTab.collapse("show");\u000a            }\u000a        }\u000a\u000a        self._processStateData = function(data) {\u000a            self.previousIsOperational = self.isOperational();\u000a\u000a            self.isErrorOrClosed(data.flags.closedOrError);\u000a            self.isOperational(data.flags.operational);\u000a            self.isPaused(data.flags.paused);\u000a            self.isPrinting(data.flags.printing);\u000a            self.isError(data.flags.error);\u000a            self.isReady(data.flags.ready);\u000a            self.isLoading(data.flags.loading);\u000a\u000a            if (self.loginState.isAdmin() && self.previousIsOperational != self.isOperational()) {\u000a                // only open or close if the panel is visible (for admins) and\u000a                // the state just changed to avoid thwarting manual open/close\u000a                self.openOrCloseOnStateChange();\u000a            }\u000a        };\u000a\u000a        self.connect = function() {\u000a            if (self.isErrorOrClosed()) {\u000a                var data = {\u000a                    "command": "connect",\u000a                    "port": self.selectedPort() || "AUTO",\u000a                    "baudrate": self.selectedBaudrate() || 0,\u000a                    "printerProfile": self.selectedPrinter(),\u000a                    "autoconnect": self.settings.serial_autoconnect()\u000a                };\u000a\u000a                if (self.saveSettings())\u000a                    data["save"] = true;\u000a\u000a                $.ajax({\u000a                    url: API_BASEURL + "connection",\u000a                    type: "POST",\u000a                    dataType: "json",\u000a                    contentType: "application/json; charset=UTF-8",\u000a                    data: JSON.stringify(data),\u000a                    success: function(response) {\u000a                        self.settings.requestData();\u000a                        self.settings.printerProfiles.requestData();\u000a                    }\u000a                });\u000a            } else {\u000a                self.requestData();\u000a                $.ajax({\u000a                    url: API_BASEURL + "connection",\u000a                    type: "POST",\u000a                    dataType: "json",\u000a                    contentType: "application/json; charset=UTF-8",\u000a                    data: JSON.stringify({"command": "disconnect"})\u000a                })\u000a            }\u000a        };\u000a\u000a        self.onStartup = function() {\u000a            self.requestData();\u000a\u000a            // when isAdmin becomes true the first time, set the panel open or\u000a            // closed based on the connection state\u000a            var subscription = self.loginState.isAdmin.subscribe(function(newValue) {\u000a                if (newValue) {\u000a                    // wait until after the isAdmin state has run through all subscriptions\u000a                    setTimeout(self.openOrCloseOnStateChange, 0);\u000a                    subscription.dispose();\u000a                }\u000a            });\u000a        };\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        ConnectionViewModel,\u000a        ["loginStateViewModel", "settingsViewModel", "printerProfilesViewModel"],\u000a        "#connection_wrapper"\u000a    ]);\u000a});\u000a\u000a;\u000a
p0
.