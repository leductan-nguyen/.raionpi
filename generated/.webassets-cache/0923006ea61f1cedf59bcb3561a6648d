V$(function() {\u000a    function UsersViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a\u000a        // initialize list helper\u000a        self.listHelper = new ItemListHelper(\u000a            "users",\u000a            {\u000a                "name": function(a, b) {\u000a                    // sorts ascending\u000a                    if (a["name"].toLocaleLowerCase() < b["name"].toLocaleLowerCase()) return -1;\u000a                    if (a["name"].toLocaleLowerCase() > b["name"].toLocaleLowerCase()) return 1;\u000a                    return 0;\u000a                }\u000a            },\u000a            {},\u000a            "name",\u000a            [],\u000a            [],\u000a            CONFIG_USERSPERPAGE\u000a        );\u000a\u000a        self.emptyUser = {name: "", admin: false, active: false};\u000a\u000a        self.currentUser = ko.observable(self.emptyUser);\u000a\u000a        self.editorUsername = ko.observable(undefined);\u000a        self.editorPassword = ko.observable(undefined);\u000a        self.editorRepeatedPassword = ko.observable(undefined);\u000a        self.editorApikey = ko.observable(undefined);\u000a        self.editorAdmin = ko.observable(undefined);\u000a        self.editorActive = ko.observable(undefined);\u000a\u000a        self.addUserDialog = undefined;\u000a        self.editUserDialog = undefined;\u000a        self.changePasswordDialog = undefined;\u000a\u000a        self.currentUser.subscribe(function(newValue) {\u000a            if (newValue === undefined) {\u000a                self.editorUsername(undefined);\u000a                self.editorAdmin(undefined);\u000a                self.editorActive(undefined);\u000a                self.editorApikey(undefined);\u000a            } else {\u000a                self.editorUsername(newValue.name);\u000a                self.editorAdmin(newValue.admin);\u000a                self.editorActive(newValue.active);\u000a                self.editorApikey(newValue.apikey);\u000a            }\u000a            self.editorPassword(undefined);\u000a            self.editorRepeatedPassword(undefined);\u000a        });\u000a\u000a        self.editorPasswordMismatch = ko.pureComputed(function() {\u000a            return self.editorPassword() != self.editorRepeatedPassword();\u000a        });\u000a\u000a        self.requestData = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users",\u000a                type: "GET",\u000a                dataType: "json",\u000a                success: self.fromResponse\u000a            });\u000a        };\u000a\u000a        self.fromResponse = function(response) {\u000a            self.listHelper.updateItems(response.users);\u000a        };\u000a\u000a        self.showAddUserDialog = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            self.currentUser(undefined);\u000a            self.editorActive(true);\u000a            self.addUserDialog.modal("show");\u000a        };\u000a\u000a        self.confirmAddUser = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            var user = {name: self.editorUsername(), password: self.editorPassword(), admin: self.editorAdmin(), active: self.editorActive()};\u000a            self.addUser(user, function() {\u000a                // close dialog\u000a                self.currentUser(undefined);\u000a                self.addUserDialog.modal("hide");\u000a            });\u000a        };\u000a\u000a        self.showEditUserDialog = function(user) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            self.currentUser(user);\u000a            self.editUserDialog.modal("show");\u000a        };\u000a\u000a        self.confirmEditUser = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            var user = self.currentUser();\u000a            user.active = self.editorActive();\u000a            user.admin = self.editorAdmin();\u000a\u000a            // make AJAX call\u000a            self.updateUser(user, function() {\u000a                // close dialog\u000a                self.currentUser(undefined);\u000a                self.editUserDialog.modal("hide");\u000a            });\u000a        };\u000a\u000a        self.showChangePasswordDialog = function(user) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            self.currentUser(user);\u000a            self.changePasswordDialog.modal("show");\u000a        };\u000a\u000a        self.confirmChangePassword = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            self.updatePassword(self.currentUser().name, self.editorPassword(), function() {\u000a                // close dialog\u000a                self.currentUser(undefined);\u000a                self.changePasswordDialog.modal("hide");\u000a            });\u000a        };\u000a\u000a        self.confirmGenerateApikey = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            self.generateApikey(self.currentUser().name, function(response) {\u000a                self._updateApikey(response.apikey);\u000a            })\u000a        };\u000a\u000a        self.confirmDeleteApikey = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            self.deleteApikey(self.currentUser().name, function() {\u000a                self._updateApikey(undefined);\u000a            })\u000a        };\u000a\u000a        self._updateApikey = function(apikey) {\u000a            self.editorApikey(apikey);\u000a            self.requestData();\u000a        };\u000a\u000a        //~~ Framework\u000a\u000a        self.onStartup = function() {\u000a            self.addUserDialog = $("#settings-usersDialogAddUser");\u000a            self.editUserDialog = $("#settings-usersDialogEditUser");\u000a            self.changePasswordDialog = $("#settings-usersDialogChangePassword");\u000a        };\u000a\u000a        //~~ AJAX calls\u000a\u000a        self.addUser = function(user, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a            if (user === undefined) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users",\u000a                type: "POST",\u000a                contentType: "application/json; charset=UTF-8",\u000a                data: JSON.stringify(user),\u000a                success: function(response) {\u000a                    self.fromResponse(response);\u000a                    if (callback) {\u000a                        callback(response);\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.removeUser = function(user, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a            if (user === undefined) return;\u000a\u000a            if (user.name == self.loginState.username()) {\u000a                // we do not allow to delete ourselves\u000a                new PNotify({title: "Not possible", text: "You may not delete your own account.", type: "error"});\u000a                return;\u000a            }\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + user.name,\u000a                type: "DELETE",\u000a                success: function(response) {\u000a                    self.fromResponse(response);\u000a                    if (callback) {\u000a                        callback(response);\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.updateUser = function(user, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a            if (user === undefined) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + user.name,\u000a                type: "PUT",\u000a                contentType: "application/json; charset=UTF-8",\u000a                data: JSON.stringify(user),\u000a                success: function(response) {\u000a                    self.fromResponse(response);\u000a                    if (callback) {\u000a                        callback(response);\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.updatePassword = function(username, password, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + username + "/password",\u000a                type: "PUT",\u000a                contentType: "application/json; charset=UTF-8",\u000a                data: JSON.stringify({password: password}),\u000a                success: function(response) {\u000a                    if (callback) {\u000a                        callback(response);\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.generateApikey = function(username, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + username + "/apikey",\u000a                type: "POST",\u000a                success: function(response) {\u000a                    if (callback) {\u000a                        callback(response);\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.deleteApikey = function(username, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + username + "/apikey",\u000a                type: "DELETE",\u000a                success: function(response) {\u000a                    if (callback) {\u000a                        callback(response);\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.onUserLoggedIn = function(user) {\u000a            if (user.admin) {\u000a                self.requestData();\u000a            }\u000a        }\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        UsersViewModel,\u000a        ["loginStateViewModel"],\u000a        []\u000a    ]);\u000a});\u000a\u000a;\u000a
p0
.