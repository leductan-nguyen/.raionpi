V$(function() {\u000a    function UserSettingsViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.users = parameters[1];\u000a\u000a        self.userSettingsDialog = undefined;\u000a\u000a        var auto_locale = {language: "_default", display: gettext("Site default"), english: undefined};\u000a        self.locales = ko.observableArray([auto_locale].concat(_.sortBy(_.values(AVAILABLE_LOCALES), function(n) {\u000a            return n.display;\u000a        })));\u000a        self.locale_languages = _.keys(AVAILABLE_LOCALES);\u000a\u000a        self.access_password = ko.observable(undefined);\u000a        self.access_repeatedPassword = ko.observable(undefined);\u000a        self.access_apikey = ko.observable(undefined);\u000a        self.interface_language = ko.observable(undefined);\u000a\u000a        self.currentUser = ko.observable(undefined);\u000a        self.currentUser.subscribe(function(newUser) {\u000a            self.access_password(undefined);\u000a            self.access_repeatedPassword(undefined);\u000a            self.access_apikey(undefined);\u000a            self.interface_language("_default");\u000a\u000a            if (newUser != undefined) {\u000a                self.access_apikey(newUser.apikey);\u000a                if (newUser.settings.hasOwnProperty("interface") && newUser.settings.interface.hasOwnProperty("language")) {\u000a                    self.interface_language(newUser.settings.interface.language);\u000a                }\u000a            }\u000a        });\u000a\u000a        self.passwordMismatch = ko.pureComputed(function() {\u000a            return self.access_password() != self.access_repeatedPassword();\u000a        });\u000a\u000a        self.show = function(user) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            if (user == undefined) {\u000a                user = self.loginState.currentUser();\u000a            }\u000a\u000a            self.currentUser(user);\u000a            self.userSettingsDialog.modal("show");\u000a        };\u000a\u000a        self.save = function() {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            if (self.access_password() && !self.passwordMismatch()) {\u000a                self.users.updatePassword(self.currentUser().name, self.access_password(), function(){});\u000a            }\u000a\u000a            var settings = {\u000a                "interface": {\u000a                    "language": self.interface_language()\u000a                }\u000a            };\u000a            self.updateSettings(self.currentUser().name, settings, function() {\u000a                // close dialog\u000a                self.currentUser(undefined);\u000a                self.userSettingsDialog.modal("hide");\u000a                self.loginState.reloadUser();\u000a            });\u000a        };\u000a\u000a        self.updateSettings = function(username, settings, callback) {\u000a            if (!CONFIG_ACCESS_CONTROL) return;\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + username + "/settings",\u000a                type: "PATCH",\u000a                contentType: "application/json; charset=UTF-8",\u000a                data: JSON.stringify(settings),\u000a                success: callback\u000a            });\u000a        };\u000a\u000a        self.saveEnabled = function() {\u000a            return !self.passwordMismatch();\u000a        };\u000a\u000a        self.onStartup = function() {\u000a            self.userSettingsDialog = $("#usersettings_dialog");\u000a        };\u000a\u000a        self.onAllBound = function(allViewModels) {\u000a            self.userSettingsDialog.on('show', function() {\u000a                _.each(allViewModels, function(viewModel) {\u000a                    if (viewModel.hasOwnProperty("onUserSettingsShown")) {\u000a                        viewModel.onUserSettingsShown();\u000a                    }\u000a                });\u000a            });\u000a            self.userSettingsDialog.on('hidden', function() {\u000a                _.each(allViewModels, function(viewModel) {\u000a                    if (viewModel.hasOwnProperty("onUserSettingsHidden")) {\u000a                        viewModel.onUserSettingsHidden();\u000a                    }\u000a                });\u000a            });\u000a        }\u000a\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        UserSettingsViewModel,\u000a        ["loginStateViewModel", "usersViewModel"],\u000a        ["#usersettings_dialog"]\u000a    ]);\u000a});\u000a\u000a;\u000a
p0
.