V$(function() {\u000a    function CuraViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.settingsViewModel = parameters[1];\u000a        self.slicingViewModel = parameters[2];\u000a\u000a        self.fileName = ko.observable();\u000a\u000a        self.placeholderName = ko.observable();\u000a        self.placeholderDisplayName = ko.observable();\u000a        self.placeholderDescription = ko.observable();\u000a\u000a        self.profileName = ko.observable();\u000a        self.profileDisplayName = ko.observable();\u000a        self.profileDescription = ko.observable();\u000a        self.profileAllowOverwrite = ko.observable(true);\u000a\u000a        self.uploadElement = $("#settings-cura-import");\u000a        self.uploadButton = $("#settings-cura-import-start");\u000a\u000a        self.profiles = new ItemListHelper(\u000a            "plugin_cura_profiles",\u000a            {\u000a                "id": function(a, b) {\u000a                    if (a["key"].toLocaleLowerCase() < b["key"].toLocaleLowerCase()) return -1;\u000a                    if (a["key"].toLocaleLowerCase() > b["key"].toLocaleLowerCase()) return 1;\u000a                    return 0;\u000a                },\u000a                "name": function(a, b) {\u000a                    // sorts ascending\u000a                    var aName = a.name();\u000a                    if (aName === undefined) {\u000a                        aName = "";\u000a                    }\u000a                    var bName = b.name();\u000a                    if (bName === undefined) {\u000a                        bName = "";\u000a                    }\u000a\u000a                    if (aName.toLocaleLowerCase() < bName.toLocaleLowerCase()) return -1;\u000a                    if (aName.toLocaleLowerCase() > bName.toLocaleLowerCase()) return 1;\u000a                    return 0;\u000a                }\u000a            },\u000a            {},\u000a            "id",\u000a            [],\u000a            [],\u000a            5\u000a        );\u000a\u000a        self._sanitize = function(name) {\u000a            return name.replace(/[^a-zA-Z0-9\u005c-_\u005c.\u005c(\u005c) ]/g, "").replace(/ /g, "_");\u000a        };\u000a\u000a        self.uploadElement.fileupload({\u000a            dataType: "json",\u000a            maxNumberOfFiles: 1,\u000a            autoUpload: false,\u000a            add: function(e, data) {\u000a                if (data.files.length == 0) {\u000a                    return false;\u000a                }\u000a\u000a                self.fileName(data.files[0].name);\u000a\u000a                var name = self.fileName().substr(0, self.fileName().lastIndexOf("."));\u000a                self.placeholderName(self._sanitize(name).toLowerCase());\u000a                self.placeholderDisplayName(name);\u000a                self.placeholderDescription("Imported from " + self.fileName() + " on " + formatDate(new Date().getTime() / 1000));\u000a\u000a                self.uploadButton.unbind("click");\u000a                self.uploadButton.on("click", function() {\u000a                    var form = {\u000a                        allowOverwrite: self.profileAllowOverwrite()\u000a                    };\u000a\u000a                    if (self.profileName() !== undefined) {\u000a                        form["name"] = self.profileName();\u000a                    }\u000a                    if (self.profileDisplayName() !== undefined) {\u000a                        form["displayName"] = self.profileDisplayName();\u000a                    }\u000a                    if (self.profileDescription() !== undefined) {\u000a                        form["description"] = self.profileDescription();\u000a                    }\u000a\u000a                    data.formData = form;\u000a                    data.submit();\u000a                });\u000a            },\u000a            done: function(e, data) {\u000a                self.fileName(undefined);\u000a                self.placeholderName(undefined);\u000a                self.placeholderDisplayName(undefined);\u000a                self.placeholderDescription(undefined);\u000a                self.profileName(undefined);\u000a                self.profileDisplayName(undefined);\u000a                self.profileDescription(undefined);\u000a                self.profileAllowOverwrite(true);\u000a\u000a                $("#settings_plugin_cura_import").modal("hide");\u000a                self.requestData();\u000a                self.slicingViewModel.requestData();\u000a            }\u000a        });\u000a\u000a        self.removeProfile = function(data) {\u000a            if (!data.resource) {\u000a                return;\u000a            }\u000a\u000a            self.profiles.removeItem(function(item) {\u000a                return (item.key == data.key);\u000a            });\u000a\u000a            $.ajax({\u000a                url: data.resource(),\u000a                type: "DELETE",\u000a                success: function() {\u000a                    self.requestData();\u000a                    self.slicingViewModel.requestData();\u000a                }\u000a            });\u000a        };\u000a\u000a        self.makeProfileDefault = function(data) {\u000a            if (!data.resource) {\u000a                return;\u000a            }\u000a\u000a            _.each(self.profiles.items(), function(item) {\u000a                item.isdefault(false);\u000a            });\u000a            var item = self.profiles.getItem(function(item) {\u000a                return item.key == data.key;\u000a            });\u000a            if (item !== undefined) {\u000a                item.isdefault(true);\u000a            }\u000a\u000a            $.ajax({\u000a                url: data.resource(),\u000a                type: "PATCH",\u000a                dataType: "json",\u000a                data: JSON.stringify({default: true}),\u000a                contentType: "application/json; charset=UTF-8",\u000a                success: function() {\u000a                    self.requestData();\u000a                }\u000a            });\u000a        };\u000a\u000a        self.showImportProfileDialog = function() {\u000a            $("#settings_plugin_cura_import").modal("show");\u000a        };\u000a\u000a        self.requestData = function() {\u000a            $.ajax({\u000a                url: API_BASEURL + "slicing/cura/profiles",\u000a                type: "GET",\u000a                dataType: "json",\u000a                success: self.fromResponse\u000a            });\u000a        };\u000a\u000a        self.fromResponse = function(data) {\u000a            var profiles = [];\u000a            _.each(_.keys(data), function(key) {\u000a                profiles.push({\u000a                    key: key,\u000a                    name: ko.observable(data[key].displayName),\u000a                    description: ko.observable(data[key].description),\u000a                    isdefault: ko.observable(data[key].default),\u000a                    resource: ko.observable(data[key].resource)\u000a                });\u000a            });\u000a            self.profiles.updateItems(profiles);\u000a        };\u000a\u000a        self.onBeforeBinding = function () {\u000a            self.settings = self.settingsViewModel.settings;\u000a            self.requestData();\u000a        };\u000a    }\u000a\u000a    // view model class, parameters for constructor, container to bind to\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        CuraViewModel,\u000a        ["loginStateViewModel", "settingsViewModel", "slicingViewModel"],\u000a        "#settings_plugin_cura"\u000a    ]);\u000a});\u000a;\u000a
p0
.