V$(function() {\u000a    function LoginStateViewModel() {\u000a        var self = this;\u000a\u000a        self.loginUser = ko.observable("");\u000a        self.loginPass = ko.observable("");\u000a        self.loginRemember = ko.observable(false);\u000a\u000a        self.loggedIn = ko.observable(false);\u000a        self.username = ko.observable(undefined);\u000a        self.isAdmin = ko.observable(false);\u000a        self.isUser = ko.observable(false);\u000a\u000a        self.allViewModels = undefined;\u000a\u000a        self.currentUser = ko.observable(undefined);\u000a\u000a        self.userMenuText = ko.pureComputed(function() {\u000a            if (self.loggedIn()) {\u000a                return self.username();\u000a            } else {\u000a                return gettext("Login");\u000a            }\u000a        });\u000a\u000a        self.reloadUser = function() {\u000a            if (self.currentUser() == undefined) {\u000a                return;\u000a            }\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "users/" + self.currentUser().name,\u000a                type: "GET",\u000a                success: self.fromResponse\u000a            })\u000a        };\u000a\u000a        self.requestData = function() {\u000a            $.ajax({\u000a                url: API_BASEURL + "login",\u000a                type: "POST",\u000a                data: {"passive": true},\u000a                success: self.fromResponse\u000a            })\u000a        };\u000a\u000a        self.fromResponse = function(response) {\u000a            if (response && response.name) {\u000a                self.loggedIn(true);\u000a                self.username(response.name);\u000a                self.isUser(response.user);\u000a                self.isAdmin(response.admin);\u000a\u000a                self.currentUser(response);\u000a\u000a                _.each(self.allViewModels, function(viewModel) {\u000a                    if (viewModel.hasOwnProperty("onUserLoggedIn")) {\u000a                        viewModel.onUserLoggedIn(response);\u000a                    }\u000a                });\u000a            } else {\u000a                self.loggedIn(false);\u000a                self.username(undefined);\u000a                self.isUser(false);\u000a                self.isAdmin(false);\u000a\u000a                self.currentUser(undefined);\u000a\u000a                _.each(self.allViewModels, function(viewModel) {\u000a                    if (viewModel.hasOwnProperty("onUserLoggedOut")) {\u000a                        viewModel.onUserLoggedOut();\u000a                    }\u000a                });\u000a            }\u000a        };\u000a\u000a        self.login = function() {\u000a            var username = self.loginUser();\u000a            var password = self.loginPass();\u000a            var remember = self.loginRemember();\u000a\u000a            $.ajax({\u000a                url: API_BASEURL + "login",\u000a                type: "POST",\u000a                data: {"user": username, "pass": password, "remember": remember},\u000a                success: function(response) {\u000a                    new PNotify({title: gettext("Login successful"), text: _.sprintf(gettext('You are now logged in as "%(username)s"'), {username: response.name}), type: "success"});\u000a                    self.fromResponse(response);\u000a\u000a                    self.loginUser("");\u000a                    self.loginPass("");\u000a                    self.loginRemember(false);\u000a                },\u000a                error: function(jqXHR, textStatus, errorThrown) {\u000a                    new PNotify({title: gettext("Login failed"), text: gettext("User unknown or wrong password"), type: "error"});\u000a                }\u000a            })\u000a        };\u000a\u000a        self.logout = function() {\u000a            $.ajax({\u000a                url: API_BASEURL + "logout",\u000a                type: "POST",\u000a                success: function(response) {\u000a                    new PNotify({title: gettext("Logout successful"), text: gettext("You are now logged out"), type: "success"});\u000a                    self.fromResponse(response);\u000a                },\u000a                error: function(error) {\u000a                    if (error && error.status === 401) {\u000a                         self.fromResponse(false);\u000a                    }\u000a                }\u000a            })\u000a        };\u000a\u000a        self.onLoginUserKeyup = function(data, event) {\u000a            if (event.keyCode == 13) {\u000a                $("#login_pass").focus();\u000a            }\u000a        };\u000a\u000a        self.onLoginPassKeyup = function(data, event) {\u000a            if (event.keyCode == 13) {\u000a                self.login();\u000a            }\u000a        };\u000a\u000a        self.onAllBound = function(allViewModels) {\u000a            self.allViewModels = allViewModels;\u000a        };\u000a\u000a        self.onDataUpdaterReconnect = function() {\u000a            self.requestData();\u000a        };\u000a\u000a        self.onStartupComplete = function() {\u000a            self.requestData();\u000a        };\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        LoginStateViewModel,\u000a        [],\u000a        []\u000a    ]);\u000a});\u000a\u000a;\u000a
p0
.